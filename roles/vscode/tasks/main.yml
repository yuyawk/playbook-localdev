---
# NOTE: The expression of |ansible_architecture| is inconsistent (e.g. "amd64" is expressed as "x86_64"), so I don't use it.
- name: get architecture for apt
  command: dpkg --print-architecture
  register: __dpkg_print_arch
  become: no
  changed_when: no
  when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"

- name: set variable for arch
  set_fact:
    var_arch_for_dpkg: "{{ __dpkg_print_arch.stdout if __dpkg_print_arch is defined else ansible_architecture }}"
  become: no
  changed_when: no

- name: add apt key
  apt_key:
    url: https://packages.microsoft.com/keys/microsoft.asc
  become: yes
  when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"

- name: add apt repository
  apt_repository:
    repo: "deb [arch={{ var_arch_for_dpkg }}] https://packages.microsoft.com/repos/vscode stable main"
  become: yes
  when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"

- name: apt install
  apt:
    name:
      - code
    state: "{{ apt_pkg_state_default }}"
  become: yes
  when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"

- name: get existing vscode extensions
  command: code --list-extensions
  register: __vscode_list_ext
  become: no
  changed_when: no
  when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"

- name: set variable for vscode extensions
  set_fact:
    vscode_list_ext: "{{ __vscode_list_ext.stdout if __vscode_list_ext is defined else '' }}"
  become: no
  changed_when: no

- name: install vscode extensions
  command: "code --install-extension {{ item }}"
  become: no
  ignore_errors: yes
  when: item not in vscode_list_ext
  loop:
    - bazelbuild.vscode-bazel
    - cschlosser.doxdocgen
    - davidanson.vscode-markdownlint
    - donjayamanne.python-environment-manager
    - donjayamanne.python-extension-pack
    - eamodio.gitlens
    - editorconfig.editorconfig
    - esbenp.prettier-vscode
    - github.vscode-github-actions
    - github.vscode-pull-request-github
    - golang.go
    - haskell.haskell
    - jeff-hykin.better-cpp-syntax
    - justusadam.language-haskell
    - kevinrose.vsc-python-indent
    - maziac.asm-code-lens
    - ms-azuretools.vscode-docker
    - ms-ceintl.vscode-language-pack-ja
    - ms-dotnettools.csharp
    - ms-dotnettools.vscode-dotnet-runtime
    - ms-python.debugpy
    - ms-python.isort
    - ms-python.python
    - ms-python.vscode-pylance
    - ms-toolsai.jupyter
    - ms-toolsai.jupyter-keymap
    - ms-toolsai.jupyter-renderers
    - ms-toolsai.vscode-jupyter-cell-tags
    - ms-toolsai.vscode-jupyter-slideshow
    - ms-vscode-remote.remote-containers
    - ms-vscode-remote.remote-ssh
    - ms-vscode-remote.remote-ssh-edit
    - ms-vscode-remote.remote-wsl
    - ms-vscode.cmake-tools
    - ms-vscode.cpptools
    - ms-vscode.cpptools-extension-pack
    - ms-vscode.cpptools-themes
    - ms-vscode.hexeditor
    - ms-vscode.remote-explorer
    - njpwerner.autodocstring
    - pradip.replace-selected
    - quantum.qsharp-lang-vscode
    - redhat.java
    - rust-lang.rust-analyzer
    - sergey-kintsel.haskell-formatter-vscode-extension
    - tuttieee.emacs-mcx
    - twxs.cmake
    - visualstudioexptteam.intellicode-api-usage-examples
    - visualstudioexptteam.vscodeintellicode
    - vscjava.vscode-java-debug
    - vscjava.vscode-java-dependency
    - vscjava.vscode-java-pack
    - vscjava.vscode-java-test
    - vscjava.vscode-maven
    - wholroyd.jinja
    - yzane.markdown-pdf
    - yzhang.markdown-all-in-one
    - ziglang.vscode-zig

- name: copy config
  copy:
    src: "{{ item }}"
    dest: "{{ ansible_env.HOME }}/.config/Code/User"
    mode: u=rw,g=rw,o=r
  become: no
  when: ansible_system == "Linux"
  loop:
    - settings.json
    - keybindings.json
    - locale.json
